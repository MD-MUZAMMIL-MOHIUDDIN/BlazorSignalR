@page "/groups/details"
@inject Blazorwebserverapp.Data.ApplicationDbContext DB
@using Blazorwebserverapp.Models
@inject NavigationManager NavigationManager
@using Microsoft.EntityFrameworkCore

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Group</h4>
    <hr />
    @if (group is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">GroupName</dt>
            <dd class="col-sm-10">@group.GroupName</dd>
            <dt class="col-sm-2">CreatedAt</dt>
            <dd class="col-sm-10">@group.CreatedAt</dd>
            <dt class="col-sm-2">DeletedAt</dt>
            <dd class="col-sm-10">@group.DeletedAt</dd>
            <dt class="col-sm-2">GroupDescription</dt>
            <dd class="col-sm-10">@group.GroupDescription</dd>
            <dt class="col-sm-2">GroupIcon</dt>
            <dd class="col-sm-10">@group.GroupIcon</dd>
            <dt class="col-sm-2">IsDeleted</dt>
            <dd class="col-sm-10">@group.IsDeleted</dd>
        </dl>
        <div>
            <a href="@($"/groups/edit?groupid={group.GroupId}")">Edit</a> |
            <a href="@($"/groups")">Back to List</a>
        </div>
    }
</div>

@code {
    Group? group;

    [SupplyParameterFromQuery]
    public string GroupId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        group = await DB.Group.FirstOrDefaultAsync(m => m.GroupId == GroupId);

        if (group is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
